import{a as I}from"../../../_chunks/chunk-NCVRMCZW.js";import{a as f}from"../../../_chunks/chunk-IQB4VCZN.js";import{h as D,k as C,l as v,m as g,n as e,o as h}from"../../../_chunks/chunk-LNJVEJI5.js";import{c as i,f as a,g as c,i as l}from"../../../_chunks/chunk-THKE7DQS.js";var T=a(l(),1);var y=a(l(),1),U=a(l(),1);var R=a(l(),1),t=a(l(),1);var w=class w extends R.TemplatedDialog{constructor(r){super(r);this.permissions=new I({element:this.byId("Permissions"),showRevoke:!0}),g.List({UserID:this.options.userID},s=>{this.permissions.value=s.Entities}),g.ListRolePermissions({UserID:this.options.userID},s=>{this.permissions.rolePermissions=s.Entities}),this.permissions.implicitPermissions=(0,t.getRemoteData)("Administration.ImplicitPermissions"),this.dialogTitle=(0,t.format)((0,t.localText)("Site.UserPermissionDialog.DialogTitle"),this.options.username)}getDialogButtons(){return[{text:(0,t.localText)("Dialogs.OkButton"),cssClass:"btn btn-primary",click:r=>{g.Update({UserID:this.options.userID,Permissions:this.permissions.value},s=>{this.dialogClose(),window.setTimeout(()=>(0,t.notifySuccess)((0,t.localText)("Site.UserPermissionDialog.SaveSuccess")),0)})}},{text:(0,t.localText)("Dialogs.CancelButton"),click:()=>this.dialogClose()}]}getTemplate(){return'<div id="~_Permissions"></div>'}};i(w,"UserPermissionDialog");var P=w;var p=a(l(),1),d=a(l(),1);var o=class extends p.EntityDialog{constructor(r){super(r);this.form=new v(this.idPrefix);this.form.Password.change(()=>{p.EditorUtils.setRequired(this.form.PasswordConfirm,this.form.Password.value.length>0)}),this.form.Password.addValidationRule(this.uniqueName,s=>{if(this.form.Password.value.length<6)return(0,d.format)((0,d.localText)(f.Validation.MinRequiredPasswordLength),6)}),this.form.PasswordConfirm.addValidationRule(this.uniqueName,s=>{if(this.form.Password.value!=this.form.PasswordConfirm.value)return(0,d.localText)(f.Validation.PasswordConfirmMismatch)})}getFormKey(){return v.formKey}getIdProperty(){return e.idProperty}getIsActiveProperty(){return e.isActiveProperty}getLocalTextPrefix(){return e.localTextPrefix}getNameProperty(){return e.nameProperty}getService(){return h.baseUrl}getToolbarButtons(){let r=super.getToolbarButtons();return r.push({title:(0,d.localText)(f.Site.UserDialog.EditPermissionsButton),cssClass:"edit-permissions-button",icon:"fa-lock text-green",onClick:()=>{new P({userID:this.entity.UserId,username:this.entity.Username}).dialogOpen()}}),r}updateInterface(){super.updateInterface(),this.toolbar.findButton("edit-permissions-button").toggleClass("disabled",this.isNewOrDeleted())}afterLoadEntity(){super.afterLoadEntity(),this.form.Password.element.toggleClass("required",this.isNew()).closest(".field").findFirst("sup").toggle(this.isNew()),this.form.PasswordConfirm.element.toggleClass("required",this.isNew()).closest(".field").findFirst("sup").toggle(this.isNew())}};i(o,"UserDialog"),o=c([p.Decorators.registerClass()],o);var n=class extends y.EntityGrid{getColumnsKey(){return C.columnsKey}getDialogType(){return o}getIdProperty(){return e.idProperty}getIsActiveProperty(){return e.isActiveProperty}getLocalTextPrefix(){return e.localTextPrefix}getService(){return h.baseUrl}constructor(m){super(m)}getDefaultSortBy(){return[e.Fields.Username]}createIncludeDeletedButton(){}getColumns(){var m=super.getColumns(),r=(0,U.tryFirst)(m,u=>u.field==e.Fields.Roles);if(r){var s;D.getLookupAsync().then(u=>{s=u,this.slickGrid.invalidate()}),r.format=u=>{if(!s)return'<i class="fa fa-spinner"></i>';var x=(u.value||[]).map(b=>(s.itemById[b]||{}).RoleName||"");return x.sort(),x.join(", ")}}return m}};i(n,"UserGrid"),n=c([y.Decorators.registerClass()],n);var Q=i(()=>(0,T.gridPageInit)(n),"default");export{Q as default};
//# sourceMappingURL=UserPage.js.map
